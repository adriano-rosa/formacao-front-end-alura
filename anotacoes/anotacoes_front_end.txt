
Anotações: Página principal

--------------------------------------------------------------------------------------------------------------------
arquivo index: é o arquivo/nome padrão para o arquivo principal da sua página html


--------------------------------------------------------------------------------------------------------------------
tag:
<> indica o início do conteúdo
</> indica o fim do conteúdo

Tipos:
h1 - Título da página                - ex. de uso <h1>conteúdo</h1>
p  - Paragráfo                       - ex. de uso <p>conteúdo</p>
strong - deixa o conteúdo em negrito - ex. de uso <strong>conteúdo</strong>
em - deixa o conteúdo em ítalico     - ex. de uso <p><em>conteúdo</em></p>

DOCTYPE - Por padrão deve sempre ser escrita em maiúsculo
        - Deve sempre ser informado o caracter ! para ser identificada como DOCTYPE Ex. <!DOCTYPE>
        - Deve sempre ser informado no final a versão do html Ex. <!DOCTYPE html>
        - <!DOCTYPE html> indica que está sendo utilizada a última versão do html
        - Não precisa ser fechafa com </>


html - É uma tag de conteúdo, para marcar tudo da página como html e que será reinderizado para o navegador     
     - Por ser de conteúdo, precisa abrir no início (após o doctype) e fechar no fim do conteúdo 
     - ex. de uso <html>
                     conteúdo e demais tag´s
                  </html>
     - Pode ser informada a propriedade lang="pt-br" para definir a linguagem da página, e ter a possibilidade de tradução da página.             
     

O html é dividido em duas partes (tag´s):

head - Cabeça
     - Informações que estão sendo passadas para o navegador
     - As tag´s <meta> e <title> devem estar dentro da tag <head>

body - Corpo
     - Informações que deseja exibir na página
     - Todas as tag´s de conteúdo a ser exibido, devem estar dentro da tag <body> Ex. <h1>,<p>... 


meta - Responsável por tratar as acentuações nos textos
     - Deve ser inserida a propriedade charset="UTF-8" que são dicionários (contém todos os caracteres das línguas utilizadas)
     - ex. de uso <meta charset="UTF-8">
     - Não precisa ser fechafa com </>

title - Responsável por dar o nome a página

link - Faz referencia a um arquivo externo
     - Deve ser inserida dentro de <head>
     ex. de uso <link rel="stylesheet" href="style.css">

--------------------------------------------------------------------------------------------------------------------------------------------

style - Propriedade que da estilo ao elemento
      - Dentro do style e entre aspas é inserido o que se deseja alterar. Ex. o tamanho da fonte
      - ex. de uso <p style="font-size: 20x"> (Fonte alterada para o tamanho de 20 pixels)

Propriedades style

style="font-size: 20x"     - Aumenta o tamanho da fonte
style="text-align: center" - Alinha o conteúdo ao centro
ex. de uso                 - <h1 style="text-align: center">Sobre a Barbearia Alura</h1>

--------------------------------------------------------------------------------------------------------------------------------------------

CSS

Existem 3 formas de utilizar o css:

1ª - inline (utiliza a propriedade style na linha do conteúdo)
2ª - em bloco - utilizar a a propriedade style dentro da tag <head>
   - Ex. de uso:
              - <style>
                    p {
                        text-align: center
                    }
                </style>

3ª - Utilizar um arquivo externo

Trabalhando com cores no css:


background - Para alterar a cor de fundo da página, pode ser inserida Propriedade background no body, dentro do arquivo.css
             Ex. de uso: 
             body{
                 background: #CCCCCC
             }

color - Trabalha as cores de elementos
----------------------------------------

Cores no css:

abcdef
binário     - 01
numérico    - 0123456789
hexadecimal - 0123456789ABCDEF

RGB = Red Green Blue

# _ _ _ _ _ _
# R R G G B B
# R R   G G   B B
# RED  GREEN  BLUE

0 = ausência de cor
F = Máximo de cor

Ex:
 R G B
#000000 - Representa o preto
#FFFFFF - Representa o branco
#FF0000 - Representa o vermelho

Obs: No arquivo.css deve ser respeitada a estrutura do xml.
     Ex: body
         h1
         p
         em strong

id - serve para identificar conteúdos específicos no html
para referenciar no css, deve ser informado o nome do id

Ex. de uso
 No html - 
<p id="missao">

 No css  - 
 #missao {
    font-size: 20px;
}

-----------------------------------------------------------------------------------------------------------
Trabalhando com imagem

tag <img> - Serve para chamar a imagem
          - Como é um arquivo externo, precisa ser informado onde está o arquivo externo
          - Para isso é usada a propriedade source(src)
          - Ex. de uso <img src="nomeImagem.jpg">

No css é necessário trabalhar com a largura, altura e espaçamentos de um elemento

height - Define a altura do elemento
width  - Define a largura do elemento 
padding - Ajustar o espaçamento interno do elemento
margin - Ajustar o espeçamento externo do elemento

-----------------------------------------------------------------------------------------------------------

Extra - Como funciona um time front-end

UX - User Experience (Usabilidade)
UI - User Interface (Design)
Desenvolvedor Front-End

-----------------------------------------------------------------------------------------------------------

Trabalhando com listas

Para incluir novos título, deve sergui a mesma linha do título principal <h1>, alterando a ordem para o novo título ex. <h2>

Para trabalhar com listas, temos dois tipos:

Precisa ser marcado cada lista com a tag <li></li>

Listas ordenadas - <ol>
                         conteúdo1
                         conteúdo2
                         conteúdo3
                         conteúdo4
                   </ol>

Listas não ordenadas - <ul>
                         conteúdo1
                         conteúdo2
                         conteúdo3
                         conteúdo4
                       </ul>


Classes no css

Ex:
<li classes="beneficios">Atendimento aos Clientes</li>

Para chamar/referenciar uma classe no css, deve ser informado com .nome_da_classe

Ex: .beneficios

-------------------------------------------------------------------------------------------

Criar divisões no conteúdo

Criar dois blocos de conteúdos e separa-los com dois blocos de html
Para isso devemos utilizar a tag <div>
Ex: <div>
          conteúdo 1
    </div>

    <div>
          conteúdo 2
    </div>

Para diferenciar a estrutura <div>, podemos usar um identificador ou uma classe


vertical-align: top; - Para alinhar o conteúdo verticalmente para cima

-------------------------------------------------------------------------------------------

Cabeçalho da página
 
Criar uma nova divisão no body antes da primeira imagem <header>



--------------------------------------------------------------------------------------------------------------------
Anotações: Nova página
--------------------------------------------------------------------------------------------------------------------

É preciso criar um novo arquivo .html para cada nova página
É preciso criar um novo arquivo .css para a nova página

O menu deve ser criado com a tag <li> de lista
Deve ser criado um link para acessar as páginas através do menu
     - Para isso deve ser usada a tag <a href>
     - Ex. de uso - <li><a href="index.html">Home</a></li>

font-weight: bold; - Deixa o texto em negrito
text-transform: uppercase; - Deixa o texto em maiúsculo

reset.css - Limpa todas as configurações padrões do navegador
<link rel="stylesheet" href="reset.css">

--------------------------------------------------------------------------------------------------------------------
Criando listas 

Separar o conteúdo pela tag main(conteúdo principal)
Criar uma lista não ordenada com <ul>
Dentro da <ul> criar tbm a <li>

Dentro da tag <li> criar uma estrutura para cada item
Ex. <li>
          <h2></h2>
          <img>
          <p>Texto1</p>
          <p>Texto1</p>
    </li>


Reforçando o inline-block

criar uma classe na tag <ul> para atender a todos os itens
No css, chamar a classe e inserir a propriedade display: inline-block para deixar uma imagem ao lado da outra;
Ex. .servicos li {display: inline-block
               }

box-sizing: border-box; - corrige os espaçamentos dos elementos

-----------------------------------------------------------------------------------------------------------

Aplicando bordas

Para montar uma borda:
border-color: #000000; borda preta
border-width: 2px; expessura
border-style: solid;

Ou simplificar com:

border: 2px solid #000000

Arredondar a borda

border-radious: 10px;

----------------------------------------------------------------------------------------------------------

Mapear comportamento quando o mouse está por cima do elemento
hover

Ex. nav a:hover {
     color: ...

}

--------------------------------------------------------------------------------------------------------

HTML5 e CSS3 parte 3: Trabalhando com formulários e tabelas

Criar formulários:

Utilizar a tag <form>
Utilizar a tag <input> para receber os dados
Toda a tag <input> tem um tipo. Ex: nome <input type="text">
Sempre utilizar a label para dar nome ao campo do input

Ex: 
<label for="Nome do campo</label>
<input type="text" id="nomesobrenome">

<textarea> - Permite escrever mais de uma linha
<input type="radio"> - cria um radio button


Configurações no css

Para aproveitar uma configuração já existente no css, basta colocar uma virgula e o nome da propriedade
Ex. form input, form textarea {}


--------------------------

Campo select - Combobox

<select>
     <options>Manhã</options>
     <options>Tarde</options>
     <options>Noite</options>
</select>

--------------------------
Tornar o campo obrigatório:
Utilizar a propriedade required
Ex. <input type="text" id="nomesobrenome" class="input-padrao" required>

--------------------------
Para deixar o campo com um exemplo de como deve ser preenchido, utilizar a propiedade placeholder
Ex.
<input type="text" id="nomesobrenome" class="input-padrao" required placeholder="Digite seu nome">

Para deixar um campo checkbox marcado como defalt em alguma opção, usar a propiedade checked no input
Ex.
<label for="radio-email"><input type="radio" name="contato" value="email" id="radio-email" checked>Email</label>

Para deixar um campo obrigatório deve ser utilizada a propriedade required
Ex.
<textarea cols="70" rows="10" id="mensagem" class="input-padrao" required></textarea>

----------------

Quando utilizado campos, não deve ser utilizado a tag <div> e sim <fieldset>
Para o parágrafo deve ser utilizado a tag <legend>

----------------------

Alterar o tamanho de um elemento ao passar o mouse

.enviar:hover {
    transform: scale(1.1);
}

---------------------------

Estrutura simples de tabela

 <table>
                <tr>
                    <td>Dia</td>
                    <td>Horário</td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                </tr>

            </table>


<tr> - linha
<td> - Colunas


Maneira mais correta de estruturar uma tabela

           <table> --- Cabeçalho ---
                <thead>
                    <tr>
                        <td>Dia</td>
                        <td>Horário</td>
                    </tr>
                </thead>   
                <tbody> ---- Corpo ---
                    <tr>
                        <td>Segunda-Feira</td>
                        <td>13:30 ás 19:00</td>
                    </tr>
                    <tr>
                        <td>Terça á Sábado</td>
                        <td>09:00 ás 19:00</td>
                    </tr>
                </tbody>
            </table>


A tag table, que representa a tabela
A tag tr, que representa a linha da tabela
A tag td, que representa a célula da tabela
A tag thead, que representa o cabeçalho da tabela
A tag tbody, que representa o corpo da tabela
A tag th, que representa a célula do cabeçalho da tabela
A tag tfoot, que representa o rodapé da tabela


Propriedade para mesclar células da tabela

<td colspan="2">Rio de Janeiro</td>

-------------------------

HTML e CSS3 Parte 4 - Avançando no CSS

<section> - Utilizar quando o bloco for semantico

Dica - Quando estilo usar classe - class
     - Quando comportamento identificados - id

Trabalhando margens

margin: 0(cima) 20(direita) 20(baixo) 0(esquerda);

margin: cima|direita|baixo|esquerda;

------------

Float - Desloca o elemento na lateral e deixa os outros elementos ao redor

iframe - cria uma janela na página para exibir algum conteúdo externo

-----------------
Importando vídeo:

Acessar a opção compartilhar do youtube
<iframe width="560" height="315" src="https://www.youtube.com/embed/hUAgjTl4MmA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

-----------------
Pseudo-classes

:hover...

Alinhar para cima
vertical-align: top;

Marcar primeiro elemento de uma lista
Ex. itens:first-chield {
    font-weight: bold;
} 

Marcar último elemento de uma lista
Ex. itens:last-chield {
    font-weight: bold;
} 

Determinar qual elemento marcar
Ex. itens:nth-chield(4) {
    font-weight: bold;
} 

Selecionar somente os pares
Ex. itens:nth-chield(2n) {
    font-weight: bold;
} 

---------------------------
Melhorando o css
Fundo com degrade

background: linear-gradient(white,black);

-----------------------------------------

 Pseudo-elementos

 Alterar a primeira letra 
 .titulo-principal::first-letter {
    font-weight: bold;
}

copia simbolos
.titulo-principal:before {
    content: "✂";
}

-----------------------------------------

 Seletores avançados css:

 Selecionar o 1º parágrafo FILHO de um <main>

 Seletor >, para acessar os filhos de determinado elemento. 
 Por exemplo, para acessar todos os p dentro de main:

 main > p {
     background: red;
 }


Seletor +, para acessar o primeiro irmão de determinado elemento. 
Por exemplo, para acessar o primeiro p após um img:
Selecionar 1º parágrafo depois de uma imagem
 img + p {
     background: red;
 }

Selecionar todos os parágrafos depois da imagem
Seletor ~, para acessar todos os irmãos de determinado elemento. 
Por exemplo, para acessar todos os p após um img:
 img ~ p {
     background: red;
 }

Seletor not, para acessar os elementos, exceto algum. 
Por exemplo, para acessar todos os p dentro de main, exceto o p que tem id missao:
 Selecionar todos com exeção
.classe p:not(id=missao) {

}
 
 .principal p:not(#missao) {
     background: red;
 }

-----------------------------------
Cálculos no css

.utensilios {
    width: calc(40% - 26px);
    float: left;
    Margin: 0 20px 20px 

}

.utensilios {
    width: calc(40% - (26px * 4);
    float: left;
    Margin: 0 20px 20px 

}

-------------------------------------
Opacidade nos elemnetos

.imagemBenef {
    width: 80%;
    opacity: 0.8; - Baixa opacidade
}

.imagemBenef:hover {
    opacity: 1; - Sem opacidade
    transition: 500ms;
}

Opacidade nos textos

.imagemBenef {
    color: rgba(0,0,0);
}

-------------------------------------

Sombras nos elementos

Sombra interna
box-shadow: inset 0 0 30px #FF0000;

Sombra externa
box-shadow: 10px 10px 10px 0 #000000
             X    Y   transição

Sombra de texto
text-shadow: 2px 2px #FF0000;

-------------------------------------

Versão mobile

1º - Identificar quantos pixels tem na tela
Inserir dentro do <head>
<meta name="viewport" content="width=device-width">
    
    Adptar o css
    @media screen and (max-width: 480px) {
        ...propriedades
    }

Exemplo completo:
@media screen and (max-width: 480px) {
    .centralizaMenu {
        width: auto;
        text-align: center;
    }

    .servicos, .principal, .mapa, .tituloBenef {
        width: auto;
    }

    .video-benef {
        width: auto;
        height: auto;
    }

    h1 {
        text-align: center;
    }

    nav {
        position: static;
    }